//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_WebService_CSharp.MyWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="makoff.webService", ConfigurationName="MyWebService.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Dodaj", ReplyAction="*")]
        int Dodaj(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Dodaj", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DodajAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Odejmij", ReplyAction="*")]
        int Odejmij(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Odejmij", ReplyAction="*")]
        System.Threading.Tasks.Task<int> OdejmijAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Pomnoz", ReplyAction="*")]
        int Pomnoz(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Pomnoz", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PomnozAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Podziel", ReplyAction="*")]
        int Podziel(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="makoff.webService/Podziel", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PodzielAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : Client_WebService_CSharp.MyWebService.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<Client_WebService_CSharp.MyWebService.WebServiceSoap>, Client_WebService_CSharp.MyWebService.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Dodaj(int x, int y) {
            return base.Channel.Dodaj(x, y);
        }
        
        public System.Threading.Tasks.Task<int> DodajAsync(int x, int y) {
            return base.Channel.DodajAsync(x, y);
        }
        
        public int Odejmij(int x, int y) {
            return base.Channel.Odejmij(x, y);
        }
        
        public System.Threading.Tasks.Task<int> OdejmijAsync(int x, int y) {
            return base.Channel.OdejmijAsync(x, y);
        }
        
        public int Pomnoz(int x, int y) {
            return base.Channel.Pomnoz(x, y);
        }
        
        public System.Threading.Tasks.Task<int> PomnozAsync(int x, int y) {
            return base.Channel.PomnozAsync(x, y);
        }
        
        public int Podziel(int x, int y) {
            return base.Channel.Podziel(x, y);
        }
        
        public System.Threading.Tasks.Task<int> PodzielAsync(int x, int y) {
            return base.Channel.PodzielAsync(x, y);
        }
    }
}
